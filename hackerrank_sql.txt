QUE :  P(R) represents a pattern drawn by Julia in R rows. The following pattern represents P(5):

* * * * * 
* * * * 
* * * 
* * 
*
Write a query to print the pattern P(20).
--------------------------------------------
ANS :  DROP PROCEDURE IF EXISTS P;
		delimiter $$
		CREATE PROCEDURE P(R INT)
		BEGIN
			WHILE R > 0 DO
			select repeat ('* ' ,R);
			SET R := R - 1;
			END WHILE;
		END;
		$$
		delimiter ;
		call P(20);
======================================================================		
QUE : P(R) represents a pattern drawn by Julia in R rows. The following pattern represents P(5):

* 
* * 
* * * 
* * * * 
* * * * *
Write a query to print the pattern P(20).
------------------------------------------------------
ANS : DROP PROCEDURE IF EXISTS P;
delimiter $$
CREATE PROCEDURE P(R INT)
BEGIN
    DECLARE S INT;
    SET S = R + 1;
    WHILE R > 0 DO
    select repeat ('* ' ,(S - R));
    SET R := R - 1;
    END WHILE;
END;
$$
delimiter ;
call P(20);
================================================================
QUE : You are given a table, Functions, containing two columns: X and Y.
COLUMN  TYPE
X       integer
y       integer
Two pairs (X1, Y1) and (X2, Y2) are said to be symmetric pairs if X1 = Y2 and X2 = Y1.
Write a query to output all such symmetric pairs in ascending order by the value of X. List the rows such that X1 â‰¤ Y1.
Sample Input
x y
2 24
4 22
24 2
22 4
2 2
2 2
Sample Output
2 2
2 24
4 22
----------------------------------------
ANS : with cte_1 as 
(
select x as x1 , y as y1 from functions
where x <= y 
union all 
select y as x1 , x as y1 from functions 
where x > y
order by x1 , y1 asc
),
cte_2 as 
( select x1,y1 ,row_number() over (partition by x1 , y1 order by x1 , y1 asc) as rnk 
    from cte_1
) select x1 , y1 from cte_2 where rnk = 2;
================================================================================
QUE: Samantha was tasked with calculating the average monthly salaries for all employees in the EMPLOYEES table, but did not realize her keyboard's  key was broken until after completing the calculation. She wants your help finding the difference between her miscalculation (using salaries with any zeros removed), and the actual average salary.
Write a query calculating the amount of error (i.e.acual - miscalculated average monthly salaries), and round it up to the next integer.
Input Format
The EMPLOYEES table is described as follows:
col type
id int
name string
salary int

Sample Output
2061
--------------------------------------
ans : with cte_1 as
(select id , name ,salary, REPLACE(salary, '0', '') as mis_cal_sal 
 from employees)
 select CEILING(avg(salary) - avg(mis_cal_sal)) from cte_1
 ;
QUE: The total score of a hacker is the sum of their maximum scores for all of the challenges. Write a query to print the hacker_id, name, and total score of the hackers ordered by the descending score. If more than one hacker achieved the same total score, then sort the result by ascending hacker_id. Exclude all hackers with a total score of  from your result.

Input Format

The following tables contain contest data:

Hackers: The hacker_id is the id of the hacker, and name is the name of the hacker. 

Submissions: The submission_id is the id of the submission, hacker_id is the id of the hacker who made the submission, challenge_id is the id of the challenge for which the submission belongs to, and score is the score of the submission. 

Sample Input

Hackers Table: 

Submissions Table: 

Sample Output

4071 Rose 191
74842 Lisa 174
84072 Bonnie 100
4806 Angela 89
26071 Frank 85
80305 Kimberly 67
49438 Patrick 43
Explanation

Hacker 4071 submitted solutions for challenges 19797 and 49593, so the total score .

Hacker 74842 submitted solutions for challenges 19797 and 63132, so the total score 

Hacker 84072 submitted solutions for challenges 49593 and 63132, so the total score .

The total scores for hackers 4806, 26071, 80305, and 49438 can be similarly calculated.

ANS: with cte_1 as 
(select hacker_id , challenge_id , max(score) as max_score
from submissions
group by hacker_id , challenge_id
having max(score) > 0
 ),
 cte_2 as
 (select hacker_id, sum(max_score) as total_score 
  from cte_1
  group by hacker_id
 )select cte_2.hacker_id,h.name , cte_2.total_score 
 from cte_2 cte_2
 left join hackers h
 on cte_2.hacker_id = h.hacker_id
 order by cte_2.total_score desc , hacker_id asc
;
=================================================================================
Que : Julia just finished conducting a coding contest, and she needs your help assembling the leaderboard! Write a query to print the respective hacker_id and name of hackers who achieved full scores for more than one challenge. Order your output in descending order by the total number of challenges in which the hacker earned a full score. If more than one hacker received full scores in same number of challenges, then sort them by ascending hacker_id.

Input Format

The following tables contain contest data:

Hackers: The hacker_id is the id of the hacker, and name is the name of the hacker.

Difficulty: The difficult_level is the level of difficulty of the challenge, and score is the score of the challenge for the difficulty level.

Challenges: The challenge_id is the id of the challenge, the hacker_id is the id of the hacker who created the challenge, and difficulty_level is the level of difficulty of the challenge.

Submissions: The submission_id is the id of the submission, hacker_id is the id of the hacker who made the submission, challenge_id is the id of the challenge that the submission belongs to, and score is the score of the submission.

Sample Input

Hackers Table:Difficulty Table:Challenges Table:Submissions Table:

Sample Output

90411 Joe
Explanation

Hacker 86870 got a score of 30 for challenge 71055 with a difficulty level of 2, so 86870 earned a full score for this challenge.

Hacker 90411 got a score of 30 for challenge 71055 with a difficulty level of 2, so 90411 earned a full score for this challenge.

Hacker 90411 got a score of 100 for challenge 66730 with a difficulty level of 6, so 90411 earned a full score for this challenge.

Only hacker 90411 managed to earn a full score for more than one challenge, so we print the their hacker_id and name as  space-separated values.
-----------------------------------------------------------------------------
ans: with cte_1 as 
(select c.challenge_id ,d.score
from challenges c 
left join
difficulty d
on c.difficulty_level  = d.difficulty_level),
cte_2 as 
( select s.hacker_id  , count(s.hacker_id) as total_challenges
 from submissions s 
 inner join cte_1 c1
 on s.challenge_id = c1.challenge_id
 and s.score = c1.score
 group by s.hacker_id 
 having count(s.hacker_id) > 1
)select cte_2.hacker_id ,h.name
from cte_2 cte_2
inner join hackers h
on cte_2.hacker_id = h. hacker_id 
order by total_challenges desc , hacker_id asc
;
=======================================================================
QUE : A median is defined as a number separating the higher half of a data set from the lower half. Query the median of the Northern Latitudes (LAT_N) from STATION and round your answer to  decimal places.

Input Format

The STATION table is described as follows:

Station.jpg

where LAT_N is the northern latitude and LONG_W is the western longitude.
---------------------------------------------------------------
ANS 1 : WITH COMMON TABLE EXPRESSION
with cte_1 as (select lat_n ,
row_number() over (order by lat_n) as rnk
from station) 
select round(lat_n,4) from cte_1
where rnk = (select ((count(1) + 1)/ 2 ) from cte_1)
;
---------------------------------------------------
ANS 2 : WITH SUBQUERY
select round(lat_n,4)
from 
(select lat_n ,
row_number() over (order by lat_n) as rnk
from station) a
where rnk = (select ((count(1) + 1)/ 2) from station);
=================================================================================================================================
QUE: SQL Project Planning
ou are given a table, Projects, containing three columns: Task_ID, Start_Date and End_Date. It is guaranteed that the difference between the End_Date and the Start_Date is equal to 1 day for each row in the table.



If the End_Date of the tasks are consecutive, then they are part of the same project. Samantha is interested in finding the total number of different projects completed.

Write a query to output the start and end dates of projects listed by the number of days it took to complete the project in ascending order. If there is more than one project that have the same number of completion days, then order by the start date of the project.

Sample Input



Sample Output

2015-10-28 2015-10-29
2015-10-30 2015-10-31
2015-10-13 2015-10-15
2015-10-01 2015-10-04

Explanation

The example describes following four projects:

Project 1: Tasks 1, 2 and 3 are completed on consecutive days, so these are part of the project. Thus start date of project is 2015-10-01 and end date is 2015-10-04, so it took 3 days to complete the project.
Project 2: Tasks 4 and 5 are completed on consecutive days, so these are part of the project. Thus, the start date of project is 2015-10-13 and end date is 2015-10-15, so it took 2 days to complete the project.
Project 3: Only task 6 is part of the project. Thus, the start date of project is 2015-10-28 and end date is 2015-10-29, so it took 1 day to complete the project.
Project 4: Only task 7 is part of the project. Thus, the start date of project is 2015-10-30 and end date is 2015-10-31, so it took 1 day to complete the project.
-----------------------------------------------------------------------
ANS : with cte_1 as 
(select * ,
datediff(day,"2014-01-01",end_date) as datediff,
 row_number() over ( order by end_date) as rnk 
from projects),
cte_2 as 
(select * , (datediff - rnk) as part_id
from cte_1 )
select min(start_date),max(end_date) 
from cte_2
group by part_id
order by count(*),min(start_date)
;
-----------------------------------------------------------------------------------------
QUE : Ollivander's Inventory
Harry Potter and his friends are at Ollivander's with Ron, finally replacing Charlie's old broken wand.

Hermione decides the best way to choose is by determining the minimum number of gold galleons needed to buy each non-evil wand of high power and age. Write a query to print the id, age, coins_needed, and power of the wands that Ron's interested in, sorted in order of descending power. If more than one wand has same power, sort the result in order of descending age.

Input Format

The following tables contain data on the wands in Ollivander's inventory:

Wands: The id is the id of the wand, code is the code of the wand, coins_needed is the total number of gold galleons needed to buy the wand, and power denotes the quality of the wand (the higher the power, the better the wand is). 

Wands_Property: The code is the code of the wand, age is the age of the wand, and is_evil denotes whether the wand is good for the dark arts. If the value of is_evil is 0, it means that the wand is not evil. The mapping between code and age is one-one, meaning that if there are two pairs,  and , then  and .

Sample Input

Wands Table:  Wands_Property Table: 

Sample Output

9 45 1647 10
12 17 9897 10
1 20 3688 8
15 40 6018 7
19 20 7651 6
11 40 7587 5
10 20 504 5
18 40 3312 3
20 17 5689 3
5 45 6020 2
14 40 5408 1
Explanation

The data for wands of age 45 (code 1): 

The minimum number of galleons needed for 
The minimum number of galleons needed for 
The data for wands of age 40 (code 2): 

The minimum number of galleons needed for 
The minimum number of galleons needed for 
The minimum number of galleons needed for 
The minimum number of galleons needed for 
The data for wands of age 20 (code 4): 

The minimum number of galleons needed for 
The minimum number of galleons needed for 
The minimum number of galleons needed for 
The data for wands of age 17 (code 5): 

The minimum number of galleons needed for 
The minimum number of galleons needed for 
---------------------------------------------------------------------
ans : with cte_1 as 
(select w.id , wp.age , w.coins_needed , w.power,
row_number() over (partition by w.power , wp.age order by w.coins_needed) as rnk
from wands w
inner join wands_property wp
on w.code = wp.code
where wp.is_evil = 0)
select cte_1.id,cte_1.age,cte_1.coins_needed,cte_1.power
from cte_1
where cte_1.rnk = 1
order by cte_1.power desc,cte_1.age desc
;
-------------------------------------------------------------------------------------
QUE : Challenges
Julia asked her students to create some coding challenges. Write a query to print the hacker_id, name, and the total number of challenges created by each student. Sort your results by the total number of challenges in descending order. If more than one student created the same number of challenges, then sort the result by hacker_id. If more than one student created the same number of challenges and the count is less than the maximum number of challenges created, then exclude those students from the result.

Input Format

The following tables contain challenge data:

Hackers: The hacker_id is the id of the hacker, and name is the name of the hacker. 

Challenges: The challenge_id is the id of the challenge, and hacker_id is the id of the student who created the challenge. 

Sample Input 0

Hackers Table:  Challenges Table: 

Sample Output 0

21283 Angela 6
88255 Patrick 5
96196 Lisa 1
Sample Input 1

Hackers Table:  Challenges Table: 

Sample Output 1

12299 Rose 6
34856 Angela 6
79345 Frank 4
80491 Patrick 3
81041 Lisa 1
Explanation

For Sample Case 0, we can get the following details:

Students  and  both created  challenges, but the maximum number of challenges created is  so these students are excluded from the result.

For Sample Case 1, we can get the following details:

Students  and  both created  challenges. Because  is the maximum number of challenges created, these students are included in the result.
-------------------------------------------------------------------------
ANS: with cte_1 as 
(select c.hacker_id , h.name , count(challenge_id) as total_challenges
from challenges c
inner join hackers h
on c.hacker_id = h.hacker_id
group by c.hacker_id , h.name ),
cte_2 as 
(select * , count(total_challenges)over (partition by total_challenges) as count
from cte_1 )
select hacker_id , name , total_challenges
from cte_2
where total_challenges = (select max(total_challenges) from cte_1)
or count = 1
order by total_challenges desc , hacker_id asc
;
----------------------------------------------------------------------------------
Que : interviews
Samantha interviews many candidates from different colleges using coding challenges and contests. Write a query to print the contest_id, hacker_id, name, and the sums of total_submissions, total_accepted_submissions, total_views, and total_unique_views for each contest sorted by contest_id. Exclude the contest from the result if all four sums are .

Note: A specific contest can be used to screen candidates at more than one college, but each college only holds  screening contest.

Input Format

The following tables hold interview data:

Contests: The contest_id is the id of the contest, hacker_id is the id of the hacker who created the contest, and name is the name of the hacker.

Colleges: The college_id is the id of the college, and contest_id is the id of the contest that Samantha used to screen the candidates.

Challenges: The challenge_id is the id of the challenge that belongs to one of the contests whose contest_id Samantha forgot, and college_id is the id of the college where the challenge was given to candidates.

View_Stats: The challenge_id is the id of the challenge, total_views is the number of times the challenge was viewed by candidates, and total_unique_views is the number of times the challenge was viewed by unique candidates.

Submission_Stats: The challenge_id is the id of the challenge, total_submissions is the number of submissions for the challenge, and total_accepted_submission is the number of submissions that achieved full scores.

Sample Input

Contests Table:Colleges Table:Challenges Table:View_Stats Table:Submission_Stats Table:

Sample Output

66406 17973 Rose 111 39 156 56
66556 79153 Angela 0 0 11 10
94828 80275 Frank 150 38 41 15
Explanation

The contest  is used in the college . In this college , challenges  and  are asked, so from the view and submission stats:

Sum of total submissions 

Sum of total accepted submissions 

Sum of total views 

Sum of total unique views 

Similarly, we can find the sums for contests  and .
---------------------------------------------------------------------------
Ans: with cte_1 as
(select col.contest_id as contest_id , COALESCE(sum(ss.total_submissions),0) as ts, COALESCE(sum(ss.total_accepted_submissions),0) as tas
from challenges cha
left join colleges col
on col.college_id = cha.college_id
left join submission_stats ss
on cha.challenge_id = ss.challenge_id
group by col.contest_id),
cte_2 as
(select col.contest_id as contest_id, COALESCE(sum(vs.total_views),0) as tv, COALESCE(sum(vs.total_unique_views),0) as tuv
from challenges cha
left join colleges col
on col.college_id = cha.college_id
left join View_Stats vs
on cha.challenge_id = vs.challenge_id
group by col.contest_id)
select con.* , cte_1.ts , cte_1.tas , cte_2.tv , cte_2.tuv
from contests con
left join cte_1 cte_1
on con.contest_id = cte_1.contest_id
left join cte_2 cte_2
on con.contest_id = cte_2.contest_id
where (cte_1.ts != 0
and cte_1.tas != 0
and cte_2.tv != 0
and cte_2.tuv != 0)
order by contest_id;
--------------------------------------------------------------------------------------------------
