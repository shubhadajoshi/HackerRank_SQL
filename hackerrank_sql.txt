QUE :  P(R) represents a pattern drawn by Julia in R rows. The following pattern represents P(5):

* * * * * 
* * * * 
* * * 
* * 
*
Write a query to print the pattern P(20).
--------------------------------------------
ANS :  DROP PROCEDURE IF EXISTS P;
		delimiter $$
		CREATE PROCEDURE P(R INT)
		BEGIN
			WHILE R > 0 DO
			select repeat ('* ' ,R);
			SET R := R - 1;
			END WHILE;
		END;
		$$
		delimiter ;
		call P(20);
======================================================================		
QUE : P(R) represents a pattern drawn by Julia in R rows. The following pattern represents P(5):

* 
* * 
* * * 
* * * * 
* * * * *
Write a query to print the pattern P(20).
------------------------------------------------------
ANS : DROP PROCEDURE IF EXISTS P;
delimiter $$
CREATE PROCEDURE P(R INT)
BEGIN
    DECLARE S INT;
    SET S = R + 1;
    WHILE R > 0 DO
    select repeat ('* ' ,(S - R));
    SET R := R - 1;
    END WHILE;
END;
$$
delimiter ;
call P(20);
================================================================
QUE : You are given a table, Functions, containing two columns: X and Y.
COLUMN  TYPE
X       integer
y       integer
Two pairs (X1, Y1) and (X2, Y2) are said to be symmetric pairs if X1 = Y2 and X2 = Y1.
Write a query to output all such symmetric pairs in ascending order by the value of X. List the rows such that X1 â‰¤ Y1.
Sample Input
x y
2 24
4 22
24 2
22 4
2 2
2 2
Sample Output
2 2
2 24
4 22
----------------------------------------
ANS : with cte_1 as 
(
select x as x1 , y as y1 from functions
where x <= y 
union all 
select y as x1 , x as y1 from functions 
where x > y
order by x1 , y1 asc
),
cte_2 as 
( select x1,y1 ,row_number() over (partition by x1 , y1 order by x1 , y1 asc) as rnk 
    from cte_1
) select x1 , y1 from cte_2 where rnk = 2;
================================================================================
QUE: Samantha was tasked with calculating the average monthly salaries for all employees in the EMPLOYEES table, but did not realize her keyboard's  key was broken until after completing the calculation. She wants your help finding the difference between her miscalculation (using salaries with any zeros removed), and the actual average salary.
Write a query calculating the amount of error (i.e.acual - miscalculated average monthly salaries), and round it up to the next integer.
Input Format
The EMPLOYEES table is described as follows:
col type
id int
name string
salary int

Sample Output
2061
--------------------------------------
ans : with cte_1 as
(select id , name ,salary, REPLACE(salary, '0', '') as mis_cal_sal 
 from employees)
 select CEILING(avg(salary) - avg(mis_cal_sal)) from cte_1
 ;
QUE: The total score of a hacker is the sum of their maximum scores for all of the challenges. Write a query to print the hacker_id, name, and total score of the hackers ordered by the descending score. If more than one hacker achieved the same total score, then sort the result by ascending hacker_id. Exclude all hackers with a total score of  from your result.

Input Format

The following tables contain contest data:

Hackers: The hacker_id is the id of the hacker, and name is the name of the hacker. 

Submissions: The submission_id is the id of the submission, hacker_id is the id of the hacker who made the submission, challenge_id is the id of the challenge for which the submission belongs to, and score is the score of the submission. 

Sample Input

Hackers Table: 

Submissions Table: 

Sample Output

4071 Rose 191
74842 Lisa 174
84072 Bonnie 100
4806 Angela 89
26071 Frank 85
80305 Kimberly 67
49438 Patrick 43
Explanation

Hacker 4071 submitted solutions for challenges 19797 and 49593, so the total score .

Hacker 74842 submitted solutions for challenges 19797 and 63132, so the total score 

Hacker 84072 submitted solutions for challenges 49593 and 63132, so the total score .

The total scores for hackers 4806, 26071, 80305, and 49438 can be similarly calculated.

ANS: with cte_1 as 
(select hacker_id , challenge_id , max(score) as max_score
from submissions
group by hacker_id , challenge_id
having max(score) > 0
 ),
 cte_2 as
 (select hacker_id, sum(max_score) as total_score 
  from cte_1
  group by hacker_id
 )select cte_2.hacker_id,h.name , cte_2.total_score 
 from cte_2 cte_2
 left join hackers h
 on cte_2.hacker_id = h.hacker_id
 order by cte_2.total_score desc , hacker_id asc
;
